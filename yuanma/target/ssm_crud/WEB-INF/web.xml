<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	     		        http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5" >

<!-- 这个web项目的核心配置 -->
<!-- 配置核心点：1.配置启动Spring容器
				 2.配置SpringMVC前端控制器，拦截所有请求
				 3.配置SpringMVC字符编码过滤器
-->
<!-- 配置内容有先后顺序 -->

	<!-- 启动Spring容器 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- Spring配置文件的位置 -->
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- 配置SpringMVC的前端控制器，拦截所有请求 -->
	<servlet>
		<servlet-name>dispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- SpringMVC的配置文件位置，不指定的话默认与web.xml文件在同一级目录下 -->
		<!-- 文件名叫【配置的当前servlet名-servlet.xml】 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/dispatcherServlet-servlet.xml</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>dispatcherServlet</servlet-name>
		<!-- 拦截所有请求 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- 配置SpringMVC字符编码过滤器，一定要放在所有过滤器之前 -->
	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<!-- 配置字符编码属性为UTF-8 -->
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<!-- 配置请求字符编码属性为true -->
		<init-param>
			<param-name>forceRequestEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
		<!-- 配置响应字符编码属性为true -->
		<init-param>
			<param-name>forceResponseEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 配置Rest风格的URI -->
	<!-- 将页面普通的post求转为指定的delete或者put请求 -->
	<filter>
		<filter-name>hiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>hiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 拦截PUT请求 -->
	<filter>
		<filter-name>httpPutFormContentFilter</filter-name>
		<filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>httpPutFormContentFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 配置日志 -->
	<context-param>
    	<param-name>log4jConfigLocation</param-name>
    	<param-value>classpath:log4j.properties</param-value>
  	</context-param>
  	<context-param>
    	<param-name>log4jRefreshInterval</param-name>
    	<param-value>6000</param-value>
  	</context-param>
  	<listener>
    	<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  	</listener>
	
</web-app>